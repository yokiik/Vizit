"""–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Gunicorn –¥–ª—è production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""

import multiprocessing
import os

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ worker –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: (2 √ó –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä CPU) + 1
workers = multiprocessing.cpu_count() * 2 + 1
if workers > 8:
    workers = 8  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 8 workers

# –¢–∏–ø worker
worker_class = 'sync'

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ worker –ø–æ—Ç–æ–∫–æ–≤ (–¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)
threads = 2

# –ë–∏–Ω–¥–∏–Ω–≥
bind = f"0.0.0.0:{os.getenv('PORT', '8088')}"

# –¢–∞–π–º–∞—É—Ç—ã
timeout = 300  # 5 –º–∏–Ω—É—Ç –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
graceful_timeout = 30
keepalive = 5

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
loglevel = 'info'
accesslog = '-'
errorlog = '-'

# –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞
proc_name = 'rli-systems'

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
max_requests = 1000
max_requests_jitter = 50

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
reload = False

# PID —Ñ–∞–π–ª
pidfile = None  # –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å: '/var/run/rli-systems.pid'

# User –∏ Group (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
# user = 'www-data'
# group = 'www-data'

# Preload –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏
preload_app = False  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ True –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å –º–Ω–æ–≥–æ–ø—Ä–æ—Ü–µ—Å—Å–Ω–æ—Å—Ç—å—é

# –ú–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
worker_tmp_dir = '/dev/shm'  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç shared memory –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

def on_starting(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    print("üöÄ RLI Systems server starting...")

def on_reload(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ"""
    print("üîÑ RLI Systems server reloading...")

def worker_exit(server, worker):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ worker"""
    print(f"üëã Worker {worker.pid} exiting...")

def on_exit(server):
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    print("üõë RLI Systems server exiting...")

